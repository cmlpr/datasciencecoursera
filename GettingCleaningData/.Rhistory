getwd()
setwd("~/Documents/Repos/datasciencecoursera/GettingCleaningData/")
getwd()
list.files()
if(!file.exsts("./Data")){dir.create("./Data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
list.files("./Data")
download.file(fileUrl, destfile="./Data/cameras2.csv", method = "curl")
list.files("./Data")
cameraData <- read.csv("./Data/cameras2.csv")
names(cameraData)
head(cameraData)
tolower(names(cameraData))
str(cameraData)
toupper(names(cameraData))
splitNames <- strsplit(names(cameraData), "\\.")
splitNames
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
$letters
mylist$letters
mylist[[1]]
splitNames[[6]][1]
firstElement <- function(x){x[1]}
sapply(splitNames, firstElement)
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutionss-apr29.csv"
download.file(fileUrl1, destfile = "./Data/reviews.csv", method = "curl")
download.file(fileUrl2, destfile = "./Data/solutionss.csv", method = "curl")
reviews <- read.csv("./Data//reviews.csv")
solutions <- read.csv("./Data//solutionss.csv")
head(reviews,2)
head(solutions,2)
solutions <- read.csv("./Data//solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
sub("_","", names(reviews),)
testName <- "this_is_a_test"
sub("_","",testName)
gsub("_","",testName)
grep("Alemada"m cameraData$intersection)
grep("Alemada", cameraData$intersection)
grep("Alameda", cameraData$intersection)
table(grepl("Alameda", cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection)]
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection), ]
cameraData2
grep("Alameda", cameraData$intersection, value = TRUE)
grep("JeffStreet", cameraData$Intersection)
length(grep("JeffStreet", cameraData$Intersection))
library(stringr)
nchar("Jeffry Leek")
substr("Jeffry Leek", 1, 7)
paste("Cem", "Alper")
past0("Cem", "Alper")
str_trim("Jeff    ")
morning$
a <- "my name is cem and CEM and CeM"
grep([C][c][e][E][m][M])
grep([C][c][e][E][m][M], a)
dl = date()
class(dl)
d2 = Sys.Date()
d2
d1 = date()
d1
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2, "%a %b %d")
d2
x <- c("1jan1960", "2jan1960", "3jul1960")
z <- as.Date(x, "%d%b%Y")
z
z[1] - z[2]
as.numeric(z[1]-z[2])
weekday(d2)
weekdays(d2)
months(d2)
julian(d2)
install.packages("lubridate")
library(lubridate)
ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03", tz = "Pacific/Auckland")
?Sys.timezone
x <- dmy(c("1jan2013", "2jan2013", "3mar2013", "30jul2013"))
wday(x[1])
wday(x[1], label=TRUE)
getwd()
setwd("/Users/cemalperozen/Documents/Repos/datasciencecoursera/GettingCleaningData")
getwd()
list.files("./Data")
housingData <- read.table("Data/Quiz1.csv", sep = ",", header = TRUE, quote = "")
head(housingData)
names(housingData)
str(housingData)
names(housingData)
strsplit(names(housingData), "wgtp")
a <- strsplit(names(housingData), "wgtp")
a[[123]]
a[[122]]
a[[123]]
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl, destfile= "Data/GDP.csv")
download.file(fileurl, destfile= "Data/GDP.csv", method = "curl")
list.files("./Data")
list.files("./Data")
download.file(fileurl, destfile= "./Data/GDP2.csv", method = "curl")
list.files("./Data")
gdp <- read.table("Data/GDP2.csv", sep = ",", header = TRUE, quote = "")
gdp <- read.csv("Data/GDP2.csv")
head(gdp)
gdp <- read.csv("./Data/GDP2.csv", skip = 4, stringsAsFactors = FALSE)
str(gdp)
gdp$X.4
a <- gdp$X.4
sub(",","", a,)
a <- sub(",","", a,)
a
a <- gsub(",","", a,)
a
str_trim(a)
a <- str_trim(a)
b <- as.numeric(a)
b
mean(b, na.rm = T)
a <- gdp$X.4
a
a <- gsub(",","", a,)
a
a <- str_trim(a)
a
a <- gsub("..","0", a,)
a
a <- gdp$X.4
a
a <- gsub(",","", a,)
a
a <- str_trim(a)
a
a <- gsub("\\..","", a,)
a
a <- gsub("","0", a,)
a
a <- gdp$X.4
a
a <- gsub(",","", a,)
a
a <- str_trim(a)
a
a <- gsub("\\..","", a,)
a <- gdp$X.4
a
a <- gsub(",","", a,)
a
a <- str_trim(a)
a
a <- gsub("\\..","", a,)
a
a <- gsub("","0", a,)
a <- gdp$X.4
a
a <- str_trim(a)
a
a <- gdp$X.4
a
a <- str_trim(a)
a
a <- gdp$X.4
a
a <- str_trim(a)
a
a <- gsub(",","", a,)
a
a <- gsub("\\..","", a,)
a
b <- as.numeric(a)
mean(b, na.rm = T)
mean(b, na.rm = F)
sum(b, na.rm = T)
count(b)
length(b)
b <- as.numeric(a)
a
b <- as.numeric(a)
sum(b, na.rm = T)
length(b)
sum(b, na.rm = T)/length(b)
gdp <- read.csv("./Data/GDP2.csv", skip = 4, stringsAsFactors = FALSE)
str(gdp)
gdp <- read.csv("./Data/GDP2.csv", skip = 5, stringsAsFactors = FALSE)
str(gdp)
4
gdp <- read.csv("./Data/GDP2.csv", skip = 4, stringsAsFactors = FALSE)
str(gdp)
a <- gdp$X.4[190,]
a
a <- gdp$X.4[1:190]
a
a <- str_trim(a)
a
a <- gsub(",","", a,)
a
b <- as.numeric(a)
sum(b, na.rm = T)/length(b)
countryNames <- gdp$X.3[1:215]
grep("^United",countryNames), 3
grep("^United",countryNames)
gdp <- read.csv("./Data/gdp.csv", skip = 4, stringsAsFactors = FALSE)
str(gdp)
gdp <- gdp[, c("X", "X.1", "X.3")]
colnames(gdp) <- c("code", "gdp", "Name")
str(gdp)
gdp$code
gdp <- gdp[which(gdp$code != ""), ]
gdp$code
edu <- read.csv("./Data/edu.csv", stringsAsFactors = FALSE)
head(edu,10)
str(edu)
edu$CountryCode
length(edu$CountryCode)
combine <- merge(x = edu, y = gdp, by.x = "CountryCode", by.y = "code")
combine$CountryCode
summary(combine)
length(unique(combine$CountryCode))
combine[which(combine$gdp == ""), which(colnames(combine) == "gdp")] <- "150000"
class(combine$gdp)
combine$CountryCode
summary(combine)
names(combine)
grep("fiscal", combine)
combine[, c(10,11)]
combine[, 10]
notes <- combine[, 10]
grepl("June", notes)
table(grepl("June", notes))
combine[, 10]
table(grepl("[Ff]iscal year end: [Jj]une", notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampletime
sampletimes
sampleTimes
table(grepl("2012", sampleTimes))
portion <- sampleTime[grepl("2012", sampleTimes)]
portion <- sampleTimes[grepl("2012", sampleTimes)]
portion
z <- as.Date(portion, "%Y%b%d")
z
class(z)
z[1]
z[1] - z[2]
z[1] - z[10]
weekday(z)
weekdays(z)
m <- weekdays(z)
table(grepl("Monday", m))
table(grepl("2012", sampleTimes))
library(swirl)
swirl()
exit
exit()
asc
ls
ls()
help()
help
ls()
info()
bye()
install_from_swirl("Getting and Cleaning Data")
swirl()
path2csv
readscv(path2csv, stringsAsFactors = FALSE)
mydf <- readcsv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
path2scv <- ("/Library/Frameworks/R.framework/Versions/3.1/Resources/library/swirl/Courses/Getting_and_Cleaning_Data/Manipulating_Data_with_dplyr/2014-07-08.csv")
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
?tbl_df
cran < - tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran = package == "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, r_version == !is.na(r_version))
is.na(c(3,5,NA, 19))
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
rrange(cran2, ip_id)
arrange(cran2, ip_id)
arrange(cran2m desc(ip_id))
arrange(cran2m, desc(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
group_by()
?group_by
by_package <- group_by(cran, package)
bypackage
by_package
summarize(by_package, mean(size))
submit()
submit()
countries = n_distinct(country),
submit()
avg_bytes = mean(size))
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
?n
?n_distinct
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
# select() the following columns from cran. Keep in mind
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, students, sex, count, -grade)
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
students2
res <- gather(students2, sex_class, count - grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex, "class""))
separate(data = res, col = sex_class, into = c("sex, "class""))
separate(data = res, col = sex_class, into = c("sex", "class""))
separate(data = res, col = sex_class, into = c("sex", "class"))
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
?gather
submit()
gather(name, test, class = c("class1":"class5") , na.rm = TRUE) %>%
print
submit()
submit()
students2
res <- gather(students2, sex_class, count, -grade)
res
?gather
reset()
reset()
submit()
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
passed
failed
passed <- mutate(status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1-9-2012")
mdy("1-9-2012")
ymd("2012/1/2")
ymd(192012)
ymd("192012")
mdy("1/9/2012")
info()
ymd("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:02:14)
hms(03:22:14)
hms("03:22:14")
dlt2
dt2
ymd(dt2)
this_moment <- update("08:34:55")
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 6, minutes = 23)
this_moment
now()
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz()
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
source('~/.active-rstudio-document', echo=TRUE)
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
bye()
