abline(lm(dt$Emissions ~ dt$year),pch=22, lty=2, col="red")
## Setting the exact years in the x axis
axis(1, at=dt$year, labels= c(1999, 2002, 2005, 2008))
## Close the PNG file device
dev.off()
NEI2 <- split(NEI, NEI$year) #split it
str(NEI2) # look at the structure
# Now I can get the emission sum for each years for Baltimore by using sapply
eSumBalt <- sapply(NEI2, function(x) sum(x[which(x$fips == "24510"),4]))
eSumBalt # This will show the result
# It is time to plot it to a png file
png(file = "plot2.png", width = 480, height = 480, units = "px")
plot(years, eSumBalt, type = "l", xlab = "Years", ylab = "Total Emission", main = "Total Emission in Baltimore")
abline(lm(eSumBalt ~ years),pch=22, lty=2, col="red")
dev.off() #close the device
dt <- data.table(NEI)
## Sebseting data for Baltimore City, Maryland
dt <- dt[fips == "24510",]
## Grouping and sum the emissions by year
dt <- dt[, lapply(.SD, sum, na.rm=TRUE), by='year,type', .SDcols=c("Emissions") ]
## Initial call to ggplot
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
## Adding layer Facets
facet_grid(. ~ type) +
## Adding layer Smooth
geom_smooth(method = "lm") +
## Setting the exact years in the x axis
geom_line() +
scale_x_continuous(breaks = c(1999, 2002, 2005, 2008)) +
## Title in two rows "\n"
labs(title = "Total emissions by type of sources from PM2.5 \n in Baltimore City, Maryland") +
theme(plot.title = element_text(size = 10, colour = 'blue', hjust = 0.5)) +
## Axis label
labs(x = "The year of emissions recorded", y = "Emissions") +
## Changing x axis to be vertical
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## Changing font size from axis
theme(axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8))
## Create 'plot3.png' in my working directory using ggsave
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
library(ggplot2)
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
library(ggplot2)
library(ggplot2)
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
## Adding layer Facets
facet_grid(. ~ type) +
## Adding layer Smooth
geom_smooth(method = "lm") +
## Setting the exact years in the x axis
geom_line() +
scale_x_continuous(breaks = c(1999, 2002, 2005, 2008)) +
## Title in two rows "\n"
labs(title = "Total emissions by type of sources from PM2.5 \n in Baltimore City, Maryland") +
theme(plot.title = element_text(size = 10, colour = 'blue', hjust = 0.5)) +
## Axis label
labs(x = "The year of emissions recorded", y = "Emissions") +
## Changing x axis to be vertical
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## Changing font size from axis
theme(axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8))
p
library(plyr)
# The first argument is the data frame NEI
# The second argument is a vector of categories: I want year and type
# The third argument is a function: I want sum of emission data only for Baltimore
# Baltimore's fips number is 24510
data <- ddply(NEI, c("type", "year"), function(x) sum(x[which(x$fips == "24510"),4]))
data #look at the data
# Change the column names
colnames(data) <- c("Type", "Year", "TotalEmission")
# It is time to plot it to a png file
qplot(Year, TotalEmission, data = data, facets = Type ~ . , colour = factor(Type), main = "Total Emissions in Baltiomore for each Type")
qplot(Year, TotalEmission, data = data, facets = . ~ Type , colour = factor(Type), main = "Total Emissions in Baltiomore for each Type")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type)))
p + geom_line()
p + facet_grid(. ~ Type)
p + geom_smooth(method = "lm") +
p + labs(title = "Total Emissions in Baltiomore for each Type")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type)))
p + geom_line()
p + facet_grid(. ~ Type)
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + facet_grid(. ~ Type)
p + geom_smooth(method = "lm") +
p + labs(title = "Total Emissions in Baltiomore for each Type")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + facet_grid(. ~ Type)
p + geom_smooth(method = "lm")
p + labs(title = "Total Emissions in Baltiomore for each Type")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + facet_grid(. ~ Type)
p + geom_smooth(method = "lm")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + geom_smooth(method = "lm")
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(. ~ Type)
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(. ~ Type)
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot3.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(. ~ Type)
dev.off() #close the device
png(file = "plot3.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(Type ~ .)
dev.off() #close the device
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot3.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(Type ~ .)
dev.off() #close the device
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(Type ~ .)
p + theme(legend.title=element_blank())
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + theme(legend.title=element_blank())
p + facet_grid(Type ~ .)
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + theme(legend.position=none)
p + facet_grid(Type ~ .)
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + theme(legend.position="none")
p + facet_grid(Type ~ .)
dev.off() #close the device
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + theme(legend.position="none")
p + facet_grid(Type ~ .)
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot3.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Type))) + geom_line()
p + labs(title = "Total Emissions in Baltiomore for each Type")
p + facet_grid(Type ~ .)
dev.off() #close the device
NEI <- data.table(NEI)
SCC <- data.table(SCC)
## Subseting data from SCC for sectors related to "coal"
## I thought and tested many ways to get more entries related to "coal",
## but I think there are a lot of confused interpretation, so I decided to keep it simple
## and get just by "EI.Sector"
SCC <- subset(SCC, grepl("coal", EI.Sector, ignore.case=TRUE))
## As said by James Campbell (COMMUNITY TA):  Don't over think it,
## this isn't a exam in your knowledge of emission sources but rather your ability
## to explore data and share your insights in a visual manner
## Setting keys to the merge
setkey(NEI, SCC)
setkey(SCC, SCC)
## Merging data
dt <- merge(SCC, NEI)
## Grouping and sum the emissions by year
dt <- dt[, lapply(.SD, sum, na.rm=TRUE), by='year,EI.Sector', .SDcols=c("Emissions") ]
dt$EI.Sector <- factor(dt$EI.Sector)
levels(dt$EI.Sector) <- c("Comm/Institutional","Electric Generation", "Industrial Boilers, ICEs")
## Initial call to ggplot
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
## Adding layer Facets
facet_grid(. ~ EI.Sector) +
## Adding layer Smooth
geom_smooth(method = "lm") +
## Setting the exact years in the x axis
geom_line() +
scale_x_continuous(breaks = c(1999, 2002, 2005, 2008)) +
## Title using expression to change PM2.5
labs(title = expression("Total emissions from " * PM[2.5] * " related to Coal across the United States")) +
## Title in two rows "\n"
labs(title = "Total emissions from PM2.5 \n related to Coal across the United States") +
theme(plot.title = element_text(size = 10, colour = 'blue', hjust = 0.5)) +
## Axis label
labs(x = "The year of emissions recorded", y = "Emissions") +
## Changing x axis to be vertical
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## Changing font size from axis
theme(axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8))
labs(x = "The year of emissions recorded", y = "Emissions")
## Create 'plot4.png' in my working directory using ggsave
ggsave(filename="plot4.png", width=6, height=4, plot=p)
}
coal <- SCC[grep('Combustion', SCC$Short.Name, fixed=TRUE), ]
coal <- SCC[grep('Coal', coal$Short.Name, fixed=TRUE), ]
coalData <- NEI[NEI$SCC == coal$SCC, ]
aggregated <- aggregate(Emissions ~ year, data = coalData, FUN = sum)
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# Get only coal combustion data
coal <- SCC[grep('Combustion', SCC$Short.Name, fixed=TRUE), ]
coal <- SCC[grep('Coal', coal$Short.Name, fixed=TRUE), ]
coalData <- NEI[NEI$SCC == coal$SCC, ]
aggregated <- aggregate(Emissions ~ year, data = coalData, FUN = sum)
barplot(aggregated$Emissions, aggregated$year, names.arg=aggregated$year, legend.text="PM2.5 Emissions coal combustion sources")
NEI <- readRDS("Data/summarySCC_PM25.rds")
SCC <- readRDS("Data/Source_Classification_Code.rds")
coal <- subset(SCC, grepl("coal", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
# Now we have the necessary scc codes in coal data frame
# We can merge the NEI and caol data frames by using matching column names
# Merge function is useful for this
?merge
NEI4 <- merge(NEI, coal) # This implementation will only keep the matching rows
str(NEI4) # Let's look at the data
# We need to get the total emission for each year
# This process is very easy if one prefers to use Hadley Whickam's plyr package
# If you don't have the package, install and call it
library(plyr)
# The first argument is the data frame NEI
# The second argument is a vector of categories: I want only year
# The third argument is a function: I want sum of emission data
data <- ddply(NEI4, c("year"), function(x) sum(x[ , 4]))
data #look at the data
# Change the column names
colnames(data) <- c("Year", "TotalEmission")
# It is time to plot it to a png file
library(ggplot2) # Call ggplot2 which is a requirement
p <- ggplot(data, aes(Year, TotalEmission)) + geom_line()
p + labs(title = "Emissions from Coal Comb-Rltd Src Across US")
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot4.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission)) + geom_line()
p + labs(title = "Emissions from Coal Comb-Rltd Src Across US")
dev.off() #close the device
NEI <- data.table(NEI)
SCC <- data.table(SCC)
## Subseting data from SCC for sectors related to "motor vehicle"
## I thought, research and tested many ways to get more entries related to "motor vehicle",
## but I think there are a lot of confused interpretation, so I decided to keep it simple
## and get just by "EI.Sector" and "mobile - on-road" instead of just "mobile"
SCC <- subset(SCC, grepl("mobile - on-road", EI.Sector, ignore.case=TRUE))
## As said by James Campbell (COMMUNITY TA):  Don't over think it,
## this isn't a exam in your knowledge of emission sources but rather your ability
## to explore data and share your insights in a visual manner
## Setting keys to the merge
setkey(NEI, SCC)
setkey(SCC, SCC)
## Merging data
dt <- merge(SCC, NEI)
## Sebseting data for Baltimore City, Maryland
dt <- dt[fips == "24510",]
## After analyze the data and some results, my choice was to show also by "Sector"
## Grouping and sum the emissions by year and Sector
dt <- dt[, lapply(.SD, sum, na.rm=TRUE), by='year,EI.Sector', .SDcols=c("Emissions") ]
## Changin facets labels
dt$EI.Sector <- factor(dt$EI.Sector)
levels(dt$EI.Sector) <- c("Diesel Havy", "Diesel Light", "Galoline Heavy", "Gasoline Light")
## Initial call to ggplot
g <- ggplot(dt, aes(year, Emissions))
## Save a ggplot object
p <- g + geom_point() +
## Adding layer Facets
facet_grid(. ~ EI.Sector) +
## Adding layer Smooth
geom_smooth(method = "lm") +
## Setting the exact years in the x axis
geom_line() +
scale_x_continuous(breaks = c(1999, 2002, 2005, 2008)) +
## Title in two rows "\n"
labs(title = "Total emissions from PM2.5 related to motor vehicle \n in Baltimore City, Maryland") +
theme(plot.title = element_text(size = 10, colour = 'blue', hjust = 0.5)) +
## Axis label
labs(x = "The year of emissions recorded", y = "Emissions") +
## Reducing the limits to a better view
scale_y_continuous(limits = c(-50, 250)) +
## Changing x axis to be vertical
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## Changing font size from axis
theme(axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8))
p
NEI <- readRDS("Data/summarySCC_PM25.rds")
SCC <- readRDS("Data/Source_Classification_Code.rds")
head(NEI) # See the first 5 rows in the main file
str(NEI)  # Check the structure of the main file
names(NEI) # Check the names of the columns
names(SCC) # See the names in the SCC data frame
head(SCC) # Get an idea of the data
unique(SCC$EI.Sector) # EI Sector includes the source sector
# Sectors which starts with mobile has all the motor vehicles
# Now let's search the word "mobile" (case insensitive) in the EI.Sector column
# and get a subset of the SCC data frame with the result
# To do that we will use subset and grepl functions
# grepl function returns logical value which in turn will be used in subset function
mobile <- subset(SCC, grepl("mobile", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
# Now we have the necessary scc codes in coal data frame
# We can merge the NEI and caol data frames by using matching column names
# Merge function is useful for this
?merge
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
data <- ddply(NEI5, c("year"), function(x) sum(x[which(x$fips == "24510"),4]))
data #look at the data
# Change the column names
colnames(data) <- c("Year", "TotalEmission")
# It is time to plot it to a png file
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot5.png", width = 480, height = 480, units = "px")
qplot(Year, TotalEmission, data = data, main = " Total Emissions from Motor Veh. in Baltimore")
dev.off() #close the device
bmore.emissions <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
bmore.emissions.aggr <- aggregate(Emissions ~ year, bmore.emissions, sum)
ggplot(bmore.emissions.aggr, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("year") +
ylab(expression("total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
mobile <- subset(SCC, grepl("ON-ROAD", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
# Now we have the necessary scc codes in coal data frame
# We can merge the NEI and caol data frames by using matching column names
# Merge function is useful for this
?merge
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
str(NEI5) # Let's look at the data
# We need to get the total emission for each year
# This process is very easy if one prefers to use Hadley Whickam's plyr package
data <- ddply(NEI5, c("year"), function(x) sum(x[which(x$fips == "24510"),4]))
data #look at the data
# Change the column names
colnames(data) <- c("Year", "TotalEmission")
# It is time to plot it to a png file
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot5.png", width = 480, height = 480, units = "px")
qplot(Year, TotalEmission, data = data, main = " Total Emissions from Motor Veh. in Baltimore")
dev.off() #close the device
NEI <- readRDS("Data/summarySCC_PM25.rds")
SCC <- readRDS("Data/Source_Classification_Code.rds")
mobile <- subset(SCC, grepl("mobile - on-road", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
library(plyr)
data <- ddply(NEI5, c("year"), function(x) sum(x[which(x$fips == "24510"),4]))
colnames(data) <- c("Year", "TotalEmission")
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot5.png", width = 480, height = 480, units = "px")
qplot(Year, TotalEmission, data = data, main = " Total Emissions from Motor Veh. in Baltimore")
NEI <- readRDS("Data/summarySCC_PM25.rds")
SCC <- readRDS("Data/Source_Classification_Code.rds")
mobile <- subset(SCC, grepl("mobile - on-road", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
library(plyr)
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
head(data,20)
colnames(data) <- c("Year", "Fips", "TotalEmission")
data <- data[which(data$TotalEmission > 0),]
# Change the Fips column to a factor variable
# Change the numbers of fips to city names
str(data) # check the data
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot6.png", width = 480, height = 480, units = "px")
p + facet_grid(. ~ Fips)
# Keep the rows that have non-zero values in Total Emission column
data <- transform(data, Fips = factor(Fips))
# It is time to plot it to a png file
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Fips))) + geom_line()
data # Let's look at the data now
levels(data$Fips) <- c("Baltimore", "Los Angles")
# Change the column names
# have 0 for the total emission value, let's see
dev.off() #close the device
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
colnames(data) <- c("Year", "Fips", "TotalEmission")
data <- transform(data, Fips = factor(Fips))
# Change the numbers of fips to city names
levels(data$Fips) <- c("Baltimore", "Los Angles")
str(data) # check the data
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
head(data,20)
str(NEI5) # Let's look at the data
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,20)
NEI <- readRDS("Data/summarySCC_PM25.rds")
SCC <- readRDS("Data/Source_Classification_Code.rds")
head(NEI) # See the first 5 rows in the main file
str(NEI)  # Check the structure of the main file
names(NEI) # Check the names of the columns
names(SCC) # See the names in the SCC data frame
head(SCC) # Get an idea of the data
# Sectors which starts with mobile has all the motor vehicles
# and get a subset of the SCC data frame with the result
# grepl function returns logical value which in turn will be used in subset function
# Now we have the necessary scc codes in coal data frame
# Merge function is useful for this
NEI5 <- merge(NEI, mobile) # This implementation will only keep the matching rows
# We need to get the total emission for each year
# If you don't have the package, install and call it
# The second argument is a vector of categories: I want year and fips
library(plyr)
# To do that we will use subset and grepl functions
# We can merge the NEI and caol data frames by using matching column names
str(NEI5) # Let's look at the data
install.packages("plyr")
# The third argument is a function: I want sum of emission data for Baltimore and LA
# Now let's search the word "mobile" (case insensitive) in the EI.Sector column
?merge
# This process is very easy if one prefers to use Hadley Whickam's plyr package
unique(SCC$EI.Sector) # EI Sector includes the source sector
mobile <- subset(SCC, grepl("mobile - on-road", EI.Sector, ignore.case=TRUE), select=c(SCC, EI.Sector))
# The first argument is the data frame NEI
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
head(data,20)
# have 0 for the total emission value, let's see
head(data,20)
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" | x$fips == "06037"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,20)
str(NEI5) # Let's look at the data
library(plyr)
detach("package:plyr", unload=TRUE)
install.packages("plyr")
install.packages("plyr")
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" | x$fips == "06037"),4]))
library(plyr)
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" | x$fips == "06037"),4]))
head(data,20)
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
head(data,20)
# Change the column names
colnames(data) <- c("Year", "Fips", "TotalEmission")
head(data,200)
head(data,250)
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,250)
data <- ddply(NEI5, c("year"), function(x) sum(x[which(x$fips == "24510"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,250)
str(NEI5) # Let's look at the data
NEI5 <- NEI5[fips == "24510" | fips == "06037" ,]
NEI5 <- NEI5[NEI5$fips == "24510" | NEI5$fips == "06037" ,]
# The first argument is the data frame NEI
# The second argument is a vector of categories: I want year and fips
# The third argument is a function: I want sum of emission data for Baltimore and LA
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[which(x$fips == "24510" || x$fips == "06037"),4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,250)
# Change the column names
colnames(data) <- c("Year", "Fips", "TotalEmission")
# Keep the rows that have non-zero values in Total Emission column
data <- data[which(data$TotalEmission > 0),]
data # Let's look at the data now
# Change the Fips column to a factor variable
data <- transform(data, Fips = factor(Fips))
# Change the numbers of fips to city names
levels(data$Fips) <- c("Baltimore", "Los Angles")
str(data) # check the data
# It is time to plot it to a png file
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot6.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Fips))) + geom_line()
p + facet_grid(. ~ Fips)
dev.off() #close the device
data <- ddply(NEI5, c("year", "fips"), function(x) sum(x[ ,4]))
# Since I only calculated sums for two fips numbers, the rest of fips will
# have 0 for the total emission value, let's see
head(data,250)
# Change the column names
colnames(data) <- c("Year", "Fips", "TotalEmission")
# Keep the rows that have non-zero values in Total Emission column
data <- data[which(data$TotalEmission > 0),]
data # Let's look at the data now
# Change the Fips column to a factor variable
data <- transform(data, Fips = factor(Fips))
# Change the numbers of fips to city names
levels(data$Fips) <- c("Baltimore", "Los Angles")
str(data) # check the data
# It is time to plot it to a png file
library(ggplot2) # Call ggplot2 which is a requirement
png(file = "plot6.png", width = 480, height = 480, units = "px")
p <- ggplot(data, aes(Year, TotalEmission, colour = factor(Fips))) + geom_line()
p + facet_grid(. ~ Fips)
dev.off() #close the device
bmore.emissions <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
bmore.emissions.aggr <- aggregate(Emissions ~ year, data=bmore.emissions, FUN=sum)
# Get Los Angeles emissions from motor vehicle sources
la.emissions <- NEI[(NEI$fips=="06037") & (NEI$type=="ON-ROAD"),]
la.emissions.aggr <- aggregate(Emissions ~ year, data=la.emissions, FUN=sum)
bmore.emissions.aggr$County <- "Baltimore City, MD"
la.emissions.aggr$County <- "Los Angeles County, CA"
both.emissions <- rbind(bmore.emissions.aggr, la.emissions.aggr)
# plot
library(ggplot2)
ggplot(both.emissions, aes(x=factor(year), y=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("total emissions (tons)") +
xlab("year") +
ggtitle(expression("Motor vehicle emission variation\nin Baltimore and Los Angeles"))
