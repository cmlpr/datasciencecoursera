#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
num = "best"
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
} else {
states
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
for (state in states) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
} else {
stop("invalid state")
#print(paste("Error in best(", state, ", ", outcome, ",) : invalid state", sep = ""))
}
}
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
for (state in states) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
}
print(states)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
states
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
for (state in states$State) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
}
print(states)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
for (state in states$State) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("submitscript3.R")
source("rankall.R")
submit()
getcwd()
getwd()
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
states
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
for (state in states$State) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[state,2] <- data2[1,1]
} else if (num == "worst") {
states[state,2] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[state,2] <- data2[num, 1]
} else {
states[state,2] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
colnames(states)[1] <- "state"
source("rankall.R")
submit()
source("rankall.R")
source("rankhospital.R")
source("rankall.R")
source("submitscript3.R")
source("submitscript3.R")
source("rankall.R")
submit()
submit()
source("rankall.R")
submit()
source("rankall.R")
submit()
head(rankall("heart attack", 20), 10)
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
source("rankall.R")
submit()
head(rankall("heart attack", 20), 10)
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states
states[, order(names(states))]
states(,"AZ")
states[,"AZ]
states[,"AZ"]
states[1,"AZ"]
states[2,"AZ"]
states[1,"AK"]
states[1, state = "AK"]
states[1, state == "AK"]
states[1, which(state == "AK")]
states[1, which(states$state == "AK")]
states("AL")
states["AL"]
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
for (state in states$state) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$state == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[1, which(states$state == state)] <- data2[1,1]
} else if (num == "worst") {
states[1, which(states$state == state)] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[1, which(states$state == state)] <- data2[num, 1]
} else {
states[1, which(states$state == state)] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
data2 <- data[which(data$state == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
for (state in states$state) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[1, which(states$state == state)] <- data2[1,1]
} else if (num == "worst") {
states[1, which(states$state == state)] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[1, which(states$state == state)] <- data2[num, 1]
} else {
states[1, which(states$state == state)] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
for (state in states$state) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[which(states$state == state), 1] <- data2[1,1]
} else if (num == "worst") {
states[which(states$state == state), 1] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[which(states$state == state), 1] <- data2[num, 1]
} else {
states[which(states$state == state), 1] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
source("rankall.R")
submit()
submit()
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
for (state in states$state) {
if (outcome == "heart attack") {
columnNo <- 11
} else if (outcome == "heart failure") {
columnNo <- 17
} else if (outcome == "pneumonia") {
columnNo <- 23
} else {
stop("invalid outcome")
}
data2 <- data[which(data$State == state), c(2,columnNo)]
data2[,2] <- as.numeric(data2[, 2])
data2 <- data2[complete.cases(data2),]
#data2 <- data2[with(data2, order(2,1)),]
data2 <- data2[order(data2[,2], data2[,1]),]
if (num == "best") {
states[which(states$state == state), 1] <- data2[1,1]
} else if (num == "worst") {
states[which(states$state == state), 1] <- data2[nrow(data2), 1]
} else if (num <= nrow(data2)) {
states[which(states$state == state), 1] <- data2[num, 1]
} else {
states[which(states$state == state), 1] <- NA
}
}
states
}
head(rankall("heart attack", 20), 10)
data <- read.csv("Data/outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data[,7, drop = F])
rownames(states) <- states[,1]
states <- states[order(states[,1]),, drop = FALSE]
states$hospital <- NA
colnames(states)[1] <- "state"
states[, order(names(states))]
states <- states[, order(names(states))]
states
source("rankall.R")
submit()
source("rankall.R")
submit()
submit
submit()
source("submitscript3.R")
source("best.R")
source("rankhospital.R")
source("rankall.R")
submit()
submit()
submit()
